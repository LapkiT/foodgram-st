name: Foodgram CI/CD

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          cd backend
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          cd backend
          python -m flake8

  build_and_push_backend:
    name: Build and push backend Docker image
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          file: ./backend/foodgram_backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  build_and_push_frontend:
    name: Build and push frontend Docker image
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

  deploy:
    name: Deploy to remote server
    runs-on: ubuntu-latest
    needs:
      - build_and_push_backend
      - build_and_push_frontend
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Copy docker-compose.yml and nginx.conf to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: 'infra/docker-compose.yml,infra/nginx.conf'
          target: '/home/${{ secrets.USER }}/foodgram/'
          strip_components: 1

      - name: Update .env file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd /home/${{ secrets.USER }}/foodgram/
            echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env
            echo "DEBUG=False" >> .env
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
            echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo "DB_HOST=db" >> .env
            echo "DB_PORT=5432" >> .env

      - name: Update docker-compose.yml with Docker Hub images
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd /home/${{ secrets.USER }}/foodgram/
            sed -i 's|build:.*|image: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest|' docker-compose.yml
            sed -i 's|build:.*|image: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest|' docker-compose.yml

      - name: Run docker-compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd /home/${{ secrets.USER }}/foodgram/
            sudo docker-compose pull
            sudo docker-compose down
            sudo docker-compose up -d
            sudo docker-compose exec -T backend python manage.py migrate
            sudo docker-compose exec -T backend python manage.py collectstatic --no-input
            sudo docker-compose exec -T backend python manage.py loaddata fixtures/ingredients.json
